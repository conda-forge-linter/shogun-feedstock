{% set name = "shogun" %}

{% set version = "6.1.2" %}
{% set commit = 'shogun_' + version %}
{% set sha256 = "50cd1482d9977933b6ab4e410f4debc00bfa935fdf2812e41edb73504757c0df" %}

# Shogun doesn't produce a single tarball you can build from anymore;
# need to get the gpl-shogun tarball too. Remember to update this when updating
# the version!
{% set gpl_commit = "29ca2ff930cd5d963b3a78e79160cc04d48970c2" %}
{% set gpl_sha256 = "ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22" %}
{% set gpl_url = "http://github.com/shogun-toolbox/shogun-gpl/archive/" + gpl_commit + ".tar.gz" %}

{% set build = 0 %}

{% set blas_variant = "openblas" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: shogun_{{ version }}.tar.gz
  url: https://github.com/shogun-toolbox/shogun/archive/{{ commit }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ build }}
  features:
    - blas_{{ blas_variant }}  # [not win]
  skip:
    - true  # [win32]
    - true  # [win and py2k]
  script: |
    set -ex  # not automatic in conda-build 2

    # HACK: download the gpl tarball
    # When we migrate to conda-build 3, can have multiple sources:
    #  https://github.com/conda/conda-build/pull/1929
    python $RECIPE_DIR/get_tarball.py  -c {{ gpl_sha256 }} -p src/gpl --strip-components 1 {{ gpl_url }}  # [unix]
    python %RECIPE_DIR%/get_tarball.py -c {{ gpl_sha256 }} -p src/gpl --strip-components 1 {{ gpl_url }}  # [win]

    mkdir build
    cd build

    # figure out include / library paths
    # https://github.com/conda/conda-build/issues/2130 will be proper solution
    pyinc=$($PYTHON -c "from distutils import sysconfig; print(sysconfig.get_python_inc())")                           # [unix]
    pylib=$(otool -L $PYTHON | grep 'libpython.*\.dylib' | tr '\t' ' ' | cut -d' ' -f2 | sed "s|@rpath|$PREFIX/lib|")  # [osx]
    pylib=$(ldd $PYTHON | grep $PREFIX | grep 'libpython.*\.so' | cut -d' ' -f3)                                       # [linux]

    cmake .. \                                # [unix]
        -DCMAKE_PREFIX_PATH="$PREFIX" \       # [unix]
        -DCMAKE_INSTALL_PREFIX="$PREFIX" \    # [unix]
        -DCMAKE_BUILD_TYPE=Release \          # [unix]
        -DBUILD_EXAMPLES=OFF \                # [unix]
        -DBUILD_META_EXAMPLES=OFF \           # [unix]
        -DENABLE_TESTING=OFF \                # [unix]
        -DENABLE_COVERAGE=OFF \               # [unix]
        -DUSE_SVMLIGHT=OFF \                  # [unix]
        -DSWIG_EXECUTABLE=$PREFIX/bin/swig \  # [unix]
        -DLIBSHOGUN=OFF \                     # [unix]
        -DPYTHON_INCLUDE_DIR=$pyinc \         # [unix]
        -DPYTHON_LIBRARY=$pylib \             # [unix]
        -DPYTHON_EXECUTABLE=$PYTHON \         # [unix]
        -DINTERFACE_PYTHON=ON                 # [unix]
    make -j $CPU_COUNT                        # [unix]
    make install -j $CPU_COUNT                # [unix]

    cmake .. ^                                       # [win]
        -G"%CMAKE_GENERATOR%" ^                      # [win]
        -DCMAKE_PREFIX_PATH="%LIBRARY_PREFIX%" ^     # [win]
        -DCMAKE_INSTALL_PREFIX="%LIBRARY_PREFIX%" ^  # [win]
        -DCMAKE_BUILD_TYPE=Release ^                 # [win]
        -DBUILD_EXAMPLES=OFF ^                       # [win]
        -DBUILD_META_EXAMPLES=OFF ^                  # [win]
        -DENABLE_TESTING=OFF ^                       # [win]
        -DENABLE_COVERAGE=OFF ^                      # [win]
        -DUSE_SVMLIGHT=OFF ^                         # [win]
        -DSWIG_EXECUTABLE=%LIBRARY_BIN\\swig% ^      # [win]
        -DLIBSHOGUN=OFF ^                            # [win]
        -DPYTHON_EXECUTABLE=%PYTHON% ^               # [win]
        -DINTERFACE_PYTHON=ON                        # [win]
    if errorlevel 1 exit 1                           # [win]

    msbuild /p:Configuration=Release shogun.sln        # [win]
    if errorlevel 1 exit 1                             # [win]

    cmake --build . --target install --config Release  # [win]
    if errorlevel 1 exit 1                             # [win]

requirements:
  build:
    - toolchain
    - python
    - setuptools
    - requests  # used by get_tarball.py
    - vc 9    # [win and py27]
    - vc 10   # [win and py34]
    - vc 14   # [win and py>=35]
    - cmake
    - swig
    - numpy 1.8.*   # [unix or (win and py27)]
    - numpy 1.9.*   # [win and py35]
    - numpy 1.11.*  # [win and py36]
    - shogun-cpp {{ version }}
    - arpack 3.5.*              # [not win]
    - bzip2 1.0.*
    - curl >=7.44.0,<8
    - eigen                     # [not win]
    - eigen >=3.2,<3.3          # [win]
    - glpk 4.61|4.62
    - hdf5 1.10.1
    - json-c 0.12|0.12.*        # [not win]
    - libxml2 2.9.*
    - lzo 2.*
    - openblas 0.2.20|0.2.20.*  # [not win]
    - protobuf 3.4.*            # [not win] # conda-forge protobuf doesn't have C++ version
    - rxcpp 4.0.0
    - snappy 1.1.6|1.1.7
    - xz 5.2.*
    - zlib 1.2.11
  run:
    - python
    - numpy >=1.8   # [unix or (win and py27)]
    - numpy >=1.9   # [win and py35]
    - numpy >=1.11  # [win and py36]
    - shogun-cpp {{ version }}
    - arpack 3.5.*              # [not win]
    - bzip2 1.0.*
    - curl >=7.44.0,<8
    - glpk 4.61|4.62
    - hdf5 1.10.1
    - json-c 0.12|0.12.*        # [not win]
    - libxml2 2.9.*
    - lzo 2.*
    - openblas 0.2.20|0.2.20.*  # [not win]
    - protobuf 3.4.*
    - snappy 1.1.6|1.1.7
    - xz 5.2.*
    - zlib 1.2.11

test:
  imports:
    - shogun
  commands:
    - conda inspect linkages -p $PREFIX shogun  # [not win]
    - conda inspect objects -p $PREFIX shogun  # [osx]

about:
  home: http://shogun.ml
  license: GPL-3.0
  license_family: GPL
  license_file: COPYING
  summary: 'Unified and efficient Machine Learning'
  description: |
    The Shogun Machine learning toolbox offers a wide range of efficient and
    unified Machine Learning methods.
  doc_url: http://shogun.ml/examples/latest/index.html
  dev_url: https://github.com/shogun-toolbox/shogun/wiki

extra:
  recipe-maintainers:
    - dougalsutherland
