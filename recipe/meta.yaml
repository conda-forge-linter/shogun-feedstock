{% set name = "shogun" %}

{% set version = "6.1.1" %}
{% set commit = 'shogun_' + version %}
{% set sha256 = "92ba03d6a7e98542bc89fff5bf64064de45bea66b9568abac3f50e98a4326430" %}

# Shogun doesn't produce a single tarball you can build from anymore;
# need to get the gpl-shogun tarball too. Remember to update this when updating
# the version!
{% set gpl_commit = "29ca2ff930cd5d963b3a78e79160cc04d48970c2" %}
{% set gpl_sha256 = "ff8a46b7775e784f07e9ffb02e7cd9b101f508c1c7b7d8cdbf1024a2efacdb22" %}

{% set build = 0 %}

{% set blas_variant = "openblas" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: shogun_{{ version }}.tar.gz
  url: https://github.com/shogun-toolbox/shogun/archive/{{ commit }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ build }}
  features:
    - blas_{{ blas_variant }}
  skip:
    - true  # [win]
  script: |
    set -ex  # not automatic in conda-build 2

    # HACK: download the gpl tarball
    # When we migrate to conda-build 3, can have multiple sources:
    #  https://github.com/conda/conda-build/pull/1929
    cd src/gpl
    curl -SsL https://github.com/shogun-toolbox/shogun-gpl/archive/{{ gpl_commit }}.tar.gz > shogun-gpl.tar.gz
    [[ $(openssl sha256 shogun-gpl.tar.gz | cut -d" " -f2) == "{{ gpl_sha256 }}" ]]
    tar xf shogun-gpl.tar.gz --strip-components=1
    rm shogun-gpl.tar.gz
    cd ../..

    mkdir build
    cd build

    # figure out include / library paths
    # https://github.com/conda/conda-build/issues/2130 will be proper solution
    pyinc=$($PYTHON -c "from distutils import sysconfig; print(sysconfig.get_python_inc())")
    if [[ $(uname) == "Darwin" ]]; then
        pylib=$(otool -L $PYTHON | grep 'libpython.*\.dylib' | tr '\t' ' ' | cut -d' ' -f2 | sed "s|@rpath|$PREFIX/lib|")
    else
      pylib=$(ldd $PYTHON | grep $PREFIX | grep 'libpython.*\.so' | cut -d' ' -f3)
    fi

    cmake .. \
        -DCMAKE_PREFIX_PATH="$PREFIX" \
        -DCMAKE_INSTALL_PREFIX="$PREFIX" \
        -DCMAKE_BUILD_TYPE=Release \
        -DBUILD_EXAMPLES=OFF \
        -DBUILD_META_EXAMPLES=OFF \
        -DENABLE_TESTING=OFF \
        -DENABLE_COVERAGE=OFF \
        -DUSE_SVMLIGHT=OFF \
        -DSWIG_EXECUTABLE=$PREFIX/bin/swig \
        -DLIBSHOGUN=OFF \
        -DPYTHON_INCLUDE_DIR=$pyinc \
        -DPYTHON_LIBRARY=$pylib \
        -DPYTHON_EXECUTABLE=$PYTHON \
        -DINTERFACE_PYTHON=ON
    make -j $CPU_COUNT
    make install -j $CPU_COUNT

requirements:
  build:
    - python
    - setuptools
    - toolchain
    - cmake
    - swig
    - numpy 1.8.*
    - shogun-cpp {{ version }}
    - arpack 3.5.*
    - bzip2 1.0.*
    - curl >=7.44.0,<8
    - eigen
    - glpk 4.61|4.62
    - hdf5 1.10.1
    - json-c 0.12|0.12.*
    - libxml2 2.9.*
    - lzo 2.*
    - openblas 0.2.20|0.2.20.*
    - protobuf 3.4.*
    - rxcpp 4.0.0
    - snappy 1.1.6|1.1.7
    - xz 5.2.*
    - zlib 1.2.11
  run:
    - python
    - numpy >=1.8
    - shogun-cpp {{ version }}
    - arpack 3.5.*
    - bzip2 1.0.*
    - curl >=7.44.0,<8
    - glpk 4.61|4.62
    - hdf5 1.10.1
    - json-c 0.12|0.12.*
    - libxml2 2.9.*
    - lzo 2.*
    - openblas 0.2.20|0.2.20.*
    - protobuf 3.4.*
    - snappy 1.1.6|1.1.7
    - xz 5.2.*
    - zlib 1.2.11

test:
  imports:
    - modshogun
  commands:
    - conda inspect linkages -p $PREFIX shogun  # [not win]
    - conda inspect objects -p $PREFIX shogun  # [osx]

about:
  home: http://shogun.ml
  license: GPL-3.0
  license_family: GPL
  license_file: COPYING
  summary: 'Unified and efficient Machine Learning'
  description: |
    The Shogun Machine learning toolbox offers a wide range of efficient and
    unified Machine Learning methods.
  doc_url: http://shogun.ml/examples/latest/index.html
  dev_url: https://github.com/shogun-toolbox/shogun/wiki

extra:
  recipe-maintainers:
    - dougalsutherland
